trigger:
 branches:
  include:
  - feature/*
  - develop
  - release/*
  - hotfix/*
  - main    

variables:
  # Web app name
  webAppName: 'ApiCuentasAbandonadasFrontEnd'
  namepool: 'AgentsOnpremiseICETEX'
  nameArtefacto: 'ApiCuentasAbandonadasFrontEnd'
  ${{ if startsWith(variables['System.TeamFoundationCollectionUri'], 'https://dev.azure.com/') }}:
    OrganizationName: $[ replace(variables['System.TeamFoundationCollectionUri'], 'https://dev.azure.com/', '') ]
    OrganizationNameFinal: $[ replace(variables['OrganizationName'], '/', '') ]
  
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/') }}:
    branchName: $[ replace(variables['Build.SourceBranch'], 'refs/heads/', '') ]
    branchNameFinal: $[ replace(variables['branchName'], '/', '-') ]

  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/pull/') }}:
    branchName: $[ replace(variables['System.PullRequest.SourceBranch'], 'refs/heads/', '') ]
    branchNameFinal: $[ replace(variables['branchName'], '/', '-') ]

  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/develop') }}:
    buildProfile: "dev"
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/feature/') }}:
    buildProfile: "dev"
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/release/') }}:
    buildProfile: qa

  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:
    buildProfile: production
stages:
- stage: Build
  displayName: 'Stage Build'
  jobs:
  - job: BuildJob
    displayName: 'Proceso Compilacion'
    pool:
      name: $(namepool)
      demands:
      - agent.name -equals AgenteWindowsUno-10.1.18.42
    workspace:
      clean: all 
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '14.17.1'
        displayName: 'Instalando Node.js'
      - script: |
          cd '$(System.DefaultWorkingDirectory)/'
          npm install 
        displayName: 'Instalando npm'
      - script: |
          cd '$(System.DefaultWorkingDirectory)/'
          npm install -g @angular/cli
        displayName: 'Instalando Angular CLI'
      - script: |
          cd '$(System.DefaultWorkingDirectory)/'
          npm run build:$(buildProfile)
        displayName: 'Compilando'
      - task: ArchiveFiles@2
        displayName: 'Creando Artefacto'
        inputs:
          rootFolderOrFile: '$(Build.SourcesDirectory)/dist/BaseApp'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
          replaceExistingArchive: true
          verbose: true
      - task: PublishBuildArtifacts@1
        displayName: 'Publicando Artefacto'
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
          ArtifactName: $(nameArtefacto)
          publishLocation: 'Container'
- stage: StaticCodeAnalisys
  displayName: 'Static Code Analisys'
  jobs:
  - job: StaticCodeAnalisys
    displayName: 'Static Code Analisys'
    variables:
    - group: sonar
    pool:
      name: $(namepool)
      demands:
      - agent.name -equals AgenteWindowsUno-10.1.18.42
    workspace:
      clean: all 
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '14.17.1'
        displayName: 'Instalando Node.js'
      - script: |
          cd '$(System.DefaultWorkingDirectory)/'
          npm install 
        displayName: 'Instalando npm'
      - script: |
          cd '$(System.DefaultWorkingDirectory)/'
          npm run build:$(buildProfile)
        displayName: 'Compilando'
      - script: |
          cd '$(System.DefaultWorkingDirectory)/'
          npm install --save-dev eslint typescript @typescript-eslint/parser @typescript-eslint/eslint-plugin
          npm i -g eslint
        displayName: 'Instalando esLint Plugins'
      - script: |
          cd '$(System.DefaultWorkingDirectory)/'
          npm run eslint
        displayName: 'Run eslint'
        continueOnError: true
      - task: SonarCloudPrepare@1
        inputs:
          SonarCloud: 'SonarCloud'
          organization: 'icetex'
          scannerMode: 'CLI'
          configMode: 'manual'
          cliProjectKey: '$(OrganizationNameFinal)-CuentasAbandonadas_FrontEnd'
          cliProjectName: '$(OrganizationNameFinal)-CuentasAbandonadas_FrontEnd'
          cliSources: '.'
          extraProperties: |
            # Additional properties that will be passed to the scanner, 
            # Put one key=value per line, example:
            sonar.sources=. 
            sonar.sourceEncoding=ISO-8859-1  
            sonar.exclusions=
            sonar.branch.name=$(branchName)
            sonar.eslint.reportPaths=result-tslint.json
            sonar.exclusions="**/*.bin","**/node_modules/**/*","**/coverage/**/*", "**/coveragereport/**/*" , "dts-tooling-templates/**/*", "**/dist/**/*", "**/out/**/*"

      - task: SonarCloudAnalyze@1
      - task: SonarCloudPublish@1
        inputs:
          pollingTimeoutSec: '3000'
